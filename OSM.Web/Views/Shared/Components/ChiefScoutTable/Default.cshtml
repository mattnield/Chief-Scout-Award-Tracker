@model ChiefScoutViewModel

@{
    ViewBag.Title = "Chief Scout Award";
    var badgeName = string.Empty;
    var moduleName = string.Empty;
    var highlight = false;
}


<style>
    .memberName {
         writing-mode: vertical-rl;
         transform: rotate(180deg);
         text-align: left;
         width: 100%;
         display: table-cell;
         text-wrap: none;
    }
    
    thead th {
        vertical-align: bottom;
    }
    
    td, th {
        border: 1px solid black;
    }
    
    th {
        text-align:center;
    }
    
    td{
     text-align: center;
    }
    
    .rowHighlight {
        background-color: lightcyan;
    }
    
    .badgeComplete {
        background-color: gold !important;
    }
    
    .taskComplete {
        background-color: lightgreen !important;
    }
</style>

<table>
    <thead>
    <tr>
        <th>Badge</th>
        <th>Module</th>
        <th>Task</th>
        @foreach (var member in Model.Members)
        {
            <th><span class="memberName"><vc:member-link member=@member></vc:member-link></span></th>
        }
    </tr>
    </thead>
    <tbody>
    @foreach (var badge in Model.Badges)
    {
        @foreach (var criteria in badge.Criteria)
        {
            <tr>
                @if (badgeName != badge.Name)
                {
                    badgeName = badge.Name;
                    moduleName = string.Empty;

                    <th rowspan="@badge.Criteria.Count">@badge.Name</th>
                }

                @if (moduleName != criteria.Module)
                {
                    moduleName = criteria.Module;
                    highlight = !highlight;

                    <th rowspan="@(badge.Criteria.Count(c => c.Module == moduleName))">@criteria.Module</th>
                }

                <th class="@(highlight ? "rowHighlight" : string.Empty)">@criteria.Name</th>

                @foreach (var scout in Model.Members)
                {
                    var badgeCompletion = Model.Completion[badge.Id]
                        .FirstOrDefault(bc => bc.ScoutId == scout.Id);
                    var completionRecord = badgeCompletion
                        ?.Achievements
                        .FirstOrDefault(a => a.Key == criteria.Id)
                        .Value ?? string.Empty;
                    var completed = !string.IsNullOrEmpty(completionRecord) && !completionRecord.StartsWith('x');

                    if (completed && badgeCompletion.Completed)
                    {
                        <td class="@(highlight ? "rowHighlight" : string.Empty) badgeComplete">C</td>
                    }
                    else
                    {
                        if (completed)
                        {
                            <td class="@(highlight ? "rowHighlight" : string.Empty) taskComplete">Y</td>
                        }
                        else
                        {
                            <td class="@(highlight ? "rowHighlight" : string.Empty)">&nbsp;</td>
                        }
                    }
                }
            </tr>
        }

    }
    </tbody>
</table>